{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "Drink Master API",
    "description": "Backend for the Drink Master app",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://drink-master-api.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User endpoints"
    },
    {
      "name": "Filters",
      "description": "Filter endpoints"
    },
    {
      "name": "Drinks",
      "description": "Drink endpoints"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "No token provided",
            "content": {}
          },
          "404": {
            "description": "Invalid user",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password", "birthDate"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "john@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "birthDate": {
            "type": "string",
            "description": "User's birth date",
            "example": "2002-02-03T00:00:00+00:00"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "John"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "john@mail.com"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "john@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "John"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "john@mail.com"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTVlMmNmYjJiZjkyMTUzYzRhNThiNyIsImlhdCI6MTY5MjgwNjQzMiwiZXhwIjoxNjkyODkyODMyfQ.YAc-Qk0_KRHvlZoDwqrpzQjq2W09AdCh-x97-8pJ2nc"
          }
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
}
